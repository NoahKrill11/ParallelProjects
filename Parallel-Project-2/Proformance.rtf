{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\csgray\c0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \CocoaLigature0 This Program is highly scalable \
\
Please enter the lower bound\
2\
Please enter the upper bound\
4\
\
Array Length: 1000\
Thread Count: 1; Each thread will process 1000 element(s)\
Total time 1 thread(s): 0.000034\
Speedup from 1 to 1 threads: 0.000034 / 0.000034 = 1.000000\
Efficiency from 1 to 1 threads: 1.000000 / 1 = 1.000000\
\
Thread Count: 2; Each thread will process 500 element(s)\
Total time 2 thread(s): 0.000074\
Speedup from 1 to 2 threads: 0.000034 / 0.000074 = 0.459459\
Efficiency from 1 to 2 threads: 0.459459 / 2 = 0.229730\
\
Thread Count: 4; Each thread will process 250 element(s)\
Total time 4 thread(s): 0.000116\
Speedup from 1 to 4 threads: 0.000034 / 0.000116 = 0.293103\
Efficiency from 1 to 4 threads: 0.293103 / 4 = 0.073276\
\
Thread Count: 8; Each thread will process 125 element(s)\
Total time 8 thread(s): 0.000230\
Speedup from 1 to 8 threads: 0.000034 / 0.000230 = 0.147826\
Efficiency from 1 to 8 threads: 0.147826 / 8 = 0.018478\
\
Thread Count: 16; Each thread will process 62 element(s)\
Total time 16 thread(s): 0.000477\
Speedup from 1 to 16 threads: 0.000034 / 0.000477 = 0.071279\
Efficiency from 1 to 16 threads: 0.071279 / 16 = 0.004455\
\
\
Array Length: 2000\
Thread Count: 1; Each thread will process 2000 element(s)\
Total time 1 thread(s): 0.000486\
Speedup from 1 to 1 threads: 0.000486 / 0.000486 = 1.000000\
Efficiency from 1 to 1 threads: 1.000000 / 1 = 1.000000\
\
Thread Count: 2; Each thread will process 1000 element(s)\
Total time 2 thread(s): 0.000618\
Speedup from 1 to 2 threads: 0.000486 / 0.000618 = 0.786408\
Efficiency from 1 to 2 threads: 0.786408 / 2 = 0.393204\
\
Thread Count: 4; Each thread will process 500 element(s)\
Total time 4 thread(s): 0.000698\
Speedup from 1 to 4 threads: 0.000486 / 0.000698 = 0.696275\
Efficiency from 1 to 4 threads: 0.696275 / 4 = 0.174069\
\
Thread Count: 8; Each thread will process 250 element(s)\
Total time 8 thread(s): 0.000794\
Speedup from 1 to 8 threads: 0.000486 / 0.000794 = 0.612091\
Efficiency from 1 to 8 threads: 0.612091 / 8 = 0.076511\
\
Thread Count: 16; Each thread will process 125 element(s)\
Total time 16 thread(s): 0.001074\
Speedup from 1 to 16 threads: 0.000486 / 0.001074 = 0.452514\
Efficiency from 1 to 16 threads: 0.452514 / 16 = 0.028282\
\
\
Array Length: 4000\
Thread Count: 1; Each thread will process 4000 element(s)\
Total time 1 thread(s): 0.001178\
Speedup from 1 to 1 threads: 0.001178 / 0.001178 = 1.000000\
Efficiency from 1 to 1 threads: 1.000000 / 1 = 1.000000\
\
Thread Count: 2; Each thread will process 2000 element(s)\
Total time 2 thread(s): 0.001577\
Speedup from 1 to 2 threads: 0.001178 / 0.001577 = 0.746988\
Efficiency from 1 to 2 threads: 0.746988 / 2 = 0.373494\
\
Thread Count: 4; Each thread will process 1000 element(s)\
Total time 4 thread(s): 0.001613\
Speedup from 1 to 4 threads: 0.001178 / 0.001613 = 0.730316\
Efficiency from 1 to 4 threads: 0.730316 / 4 = 0.182579\
\
Thread Count: 8; Each thread will process 500 element(s)\
Total time 8 thread(s): 0.002553\
Speedup from 1 to 8 threads: 0.001178 / 0.002553 = 0.461418\
Efficiency from 1 to 8 threads: 0.461418 / 8 = 0.057677\
\
Thread Count: 16; Each thread will process 250 element(s)\
Total time 16 thread(s): 0.002903\
Speedup from 1 to 16 threads: 0.001178 / 0.002903 = 0.405787\
Efficiency from 1 to 16 threads: 0.405787 / 16 = 0.025362\
\
\
Array Length: 8000\
Thread Count: 1; Each thread will process 8000 element(s)\
Total time 1 thread(s): 0.002915\
Speedup from 1 to 1 threads: 0.002915 / 0.002915 = 1.000000\
Efficiency from 1 to 1 threads: 1.000000 / 1 = 1.000000\
\
Thread Count: 2; Each thread will process 4000 element(s)\
Total time 2 thread(s): 0.002933\
Speedup from 1 to 2 threads: 0.002915 / 0.002933 = 0.993863\
Efficiency from 1 to 2 threads: 0.993863 / 2 = 0.496931\
\
Thread Count: 4; Each thread will process 2000 element(s)\
Total time 4 thread(s): 0.002967\
Speedup from 1 to 4 threads: 0.002915 / 0.002967 = 0.982474\
Efficiency from 1 to 4 threads: 0.982474 / 4 = 0.245618\
\
Thread Count: 8; Each thread will process 1000 element(s)\
Total time 8 thread(s): 0.003071\
Speedup from 1 to 8 threads: 0.002915 / 0.003071 = 0.949202\
Efficiency from 1 to 8 threads: 0.949202 / 8 = 0.118650\
\
Thread Count: 16; Each thread will process 500 element(s)\
Total time 16 thread(s): 0.003347\
Speedup from 1 to 16 threads: 0.002915 / 0.003347 = 0.870929\
Efficiency from 1 to 16 threads: 0.870929 / 16 = 0.054433\
\
\
Array Length: 16000\
Thread Count: 1; Each thread will process 16000 element(s)\
Total time 1 thread(s): 0.003358\
Speedup from 1 to 1 threads: 0.003358 / 0.003358 = 1.000000\
Efficiency from 1 to 1 threads: 1.000000 / 1 = 1.000000\
\
Thread Count: 2; Each thread will process 8000 element(s)\
Total time 2 thread(s): 0.003482\
Speedup from 1 to 2 threads: 0.003358 / 0.003482 = 0.964388\
Efficiency from 1 to 2 threads: 0.964388 / 2 = 0.482194\
\
Thread Count: 4; Each thread will process 4000 element(s)\
Total time 4 thread(s): 0.003522\
Speedup from 1 to 4 threads: 0.003358 / 0.003522 = 0.953436\
Efficiency from 1 to 4 threads: 0.953436 / 4 = 0.238359\
\
Thread Count: 8; Each thread will process 2000 element(s)\
Total time 8 thread(s): 0.003605\
Speedup from 1 to 8 threads: 0.003358 / 0.003605 = 0.931484\
Efficiency from 1 to 8 threads: 0.931484 / 8 = 0.116436\
\
Thread Count: 16; Each thread will process 1000 element(s)\
Total time 16 thread(s): 0.003850\
Speedup from 1 to 16 threads: 0.003358 / 0.003850 = 0.872208\
Efficiency from 1 to 16 threads: 0.872208 / 16 = 0.054513\
}